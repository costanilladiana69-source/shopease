rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // User profile images - users can upload/read their own images
    match /users/{userId}/profile/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Product images - authenticated users can read, only admins can upload
    match /products/{productId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Review images - authenticated users can read, users can upload their own review images
    match /reviews/{reviewId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/(default)/documents/reviews/$(reviewId)) &&
        get(/databases/(default)/documents/reviews/$(reviewId)).data.userId == request.auth.uid;
    }
    
    // General images folder - authenticated users can read, admins can upload
    match /images/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Default deny rule for any other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}








