rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Users collection - users can read/write their own data, admins can read all
    match /users/{userId} {
      allow read: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
      
      allow create: if isAuthenticated() && request.auth.uid == userId;
      
      allow update: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
      
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Products collection - authenticated users can read, only admins can write
    match /products/{productId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && isAdmin();
    }
    
    // Cart collection - authenticated users can access cart items
    match /cart/{cartId} {
      allow read, write: if isAuthenticated();
    }
    
    // Orders collection - users can read their own orders, admins can read all
    match /orders/{orderId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Reviews collection - authenticated users can read, users can write their own reviews
    match /reviews/{reviewId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Categories collection - authenticated users can read, only admins can write
    match /categories/{categoryId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && isAdmin();
    }
    
    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}